<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phxl.ysy.dao.DeliveryMapper">

	<resultMap id="BaseResultMap" type="com.phxl.ysy.entity.Delivery">
		<id column="SEND_ID" property="sendId" jdbcType="VARCHAR" />
		<result column="SEND_NO" property="sendNo" jdbcType="VARCHAR" />
		<result column="R_ORG_ID" property="rOrgId" jdbcType="DECIMAL" />
		<result column="R_STORAGE_GUID" property="rStorageGuid" jdbcType="VARCHAR" />
		<result column="B_STORAGE_GUID" property="bStorageGuid" jdbcType="VARCHAR" />
		<result column="F_ORG_ID" property="fOrgId" jdbcType="DECIMAL" />
		<result column="F_STORAGE_GUID" property="fStorageGuid" jdbcType="VARCHAR" />
		<result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
		<result column="DEPT_GUID" property="deptGuid" jdbcType="VARCHAR" />
		<result column="SEND_DATE" property="sendDate" jdbcType="TIMESTAMP" />
		<result column="FSTATE" property="fstate" jdbcType="VARCHAR" />
		<result column="LXR" property="lxr" jdbcType="VARCHAR" />
		<result column="LXDH" property="lxdh" jdbcType="VARCHAR" />
		<result column="BOX_USERID" property="boxUserid" jdbcType="VARCHAR" />
		<result column="SEND_USERID" property="sendUserid" jdbcType="VARCHAR" />
		<result column="ORDER_TYPE" property="orderType" jdbcType="VARCHAR" />
		<result column="REJECT_REASON" property="rejectReason" jdbcType="VARCHAR" />
		<result column="TOTAL_PRICE" property="totalPrice" jdbcType="DECIMAL" />
		<result column="ADDR_GUID" property="addrGuid" jdbcType="VARCHAR" />
		<result column="TF_ADDRESS" property="tfAddress" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
		<result column="SEND_USERNAME" property="sendUsername" jdbcType="VARCHAR" />
		<result column="F_ORG_NAME" property="fOrgName" jdbcType="VARCHAR" />
		<result column="CHARGE_GUID" property="chargeGuid" jdbcType="VARCHAR" />
		<result column="USE_NO" property="useNo" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="BaseResultExtMap" type="com.phxl.ysy.entity.Delivery" extends="BaseResultMap">
		<result column="rOrgName" property="rOrgName" jdbcType="VARCHAR" />
		<result column="fOrgName" property="fOrgName" jdbcType="VARCHAR" />
		<result column="invoiceNo" property="invoiceNo" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Delivery_Return_List">
		d.SEND_ID "sendId", d.SEND_NO "sendNo", o.ORDER_NO "orderNo",
		o.APPLY_ID "applyId",
		d.R_ORG_ID
		"rOrgId",d.R_STORAGE_GUID "rStorageGuid",
		d.F_ORG_ID "fOrgId", d.F_STORAGE_GUID "fStorageGuid",
		d.ORDER_ID "orderId",
		to_char(d.SEND_DATE,'yyyy-MM-dd HH24:mi:ss') "sendDate", d.FSTATE "sendFstate",sid.TF_CLO_NAME
		"fstateName",cd2.TF_CLO_NAME "orderTypeName",
		d.BOX_USERID "boxUserId", d.SEND_USERID "sendUserId",
		d.TF_ADDRESS||' '||d.LXR||' '||d.LXDH "tfAddress",
		d.SEND_USERNAME
		"sendUsername",
		d.ORDER_TYPE "orderType", d.REJECT_REASON
		"rejectReson",
		d.TOTAL_PRICE "totalPrice",ro.ORG_NAME "rOrgName",fo.ORG_NAME "fOrgName",
		cf.MODIFY_USERNAME "checkUserName",to_char(cf.MODIFY_TIME,'yyyy-MM-dd HH24:mi:ss') "checkTime"
	</sql>

	<select id="searchDeliveryList" resultType="hashMap"
		parameterType="com.phxl.core.base.entity.Pager">
		select
		<include refid="Delivery_Return_List"></include>,
		decode(d.ORDER_TYPE, 'OPER_DELIVERY', (SELECT wm_concat(ood.BRAND_NAME) FROM TB_ORDER_OPER_DETAIL ood WHERE ood.ORDER_ID=d.ORDER_ID), null) "tfBrand",
		vs."qrFlag" "qrFlag"
		from tb_delivery d
		left join tb_ORDER o on d.ORDER_ID = o.ORDER_ID
		left join TB_CHANGE_FSTATE cf on d.SEND_ID = cf.TB_ID and cf.BEFOR_FSTATE
		= '50'
		left join V_STORAGECONFIG vs on d.R_STORAGE_GUID = vs.STORAGE_GUID		
		left join td_org_info ro on d.R_ORG_ID = ro.ORG_ID
		left join td_org_info fo on d.F_ORG_ID = fo.ORG_ID
		left join TD_STATIC_INFO si on si.TF_CLO='DELIVERY_FSTATE'
		left join TD_STATIC_DATA sid on si.STATIC_ID = sid.STATIC_ID and sid.TF_CLO_CODE = d.FSTATE
		left join td_static_info cn2 on cn2.TF_CLO = 'DELIVERY_TYPE'
		left join td_static_data cd2 ON cn2.STATIC_ID=cd2.STATIC_ID and cd2.TF_CLO_CODE = d.ORDER_TYPE
		<where>
			<if
				test="conditiions.rOrgId != null and conditiions.rOrgId != 0 and conditiions.rOrgId != -1">
				and d.R_ORG_ID = #{conditiions.rOrgId,jdbcType=DECIMAL}
			</if>
			<if
				test="conditiions.rStorageGuid != null and conditiions.rStorageGuid != '' and conditiions.rStorageGuid != '-1'">
				and d.R_STORAGE_GUID = #{conditiions.rStorageGuid,jdbcType=VARCHAR}
			</if>
			<if
				test="conditiions.fOrgId != null and conditiions.fOrgId != 0 and conditiions.fOrgId != -1">
				and d.F_ORG_ID = #{conditiions.fOrgId,jdbcType=DECIMAL}
			</if>
			<if
				test="conditiions.fStorageGuid != null and conditiions.fStorageGuid != '' and conditiions.fStorageGuid != '-1'">
				and d.F_STORAGE_GUID = #{conditiions.fStorageGuid,jdbcType=VARCHAR}
			</if>
			<if test="conditiions.orderId != null and conditiions.orderId != ''">
				and d.order_id = #{conditiions.orderId,jdbcType=VARCHAR}
			</if>
			<if test="conditiions.sendId != null and conditiions.sendId != ''">
				and d.send_id = #{conditiions.sendId,jdbcType=VARCHAR}
			</if>
			<if test="conditiions.orderNo != null and conditiions.orderNo != ''">
				and  <![CDATA[   regexp_like(o.order_no, #{conditiions.orderNo,jdbcType=VARCHAR}) ]]>
			</if>
			<if test="conditiions.sendNo != null and conditiions.sendNo != ''">
				and  <![CDATA[   regexp_like(d.send_no, #{conditiions.sendNo,jdbcType=VARCHAR}) ]]>
			</if>
			<if
				test="conditiions.sendFstates != null">
				and d.fstate in
				<foreach collection="conditiions.sendFstates" index="index"
					open="(" separator="," close=")">
					#{conditiions.sendFstates[${index}]}
				</foreach>
			</if>
			<if test="conditiions.excludeFstates!=null and conditiions.excludeFstates.length>0">
						and d.fstate not in
						<foreach collection="conditiions.excludeFstates" index="index" open="(" close=")" separator=",">
							#{conditiions.excludeFstates[${index}], jdbcType=VARCHAR}
						</foreach>
			</if>
			<if test="conditiions.orderType != null and conditiions.orderType != ''">
				and d.ORDER_TYPE = #{conditiions.orderType,jdbcType=VARCHAR}
			</if>
			<if
				test="conditiions.sendStartDate != null and conditiions.sendStartDate != ''">
				and <![CDATA[ to_char(d.send_date,'yyyy-mm-dd') >= #{conditiions.sendStartDate,jdbcType=VARCHAR} ]]>
			</if>
			<if
				test="conditiions.sendEndDate != null and conditiions.sendEndDate != ''">
				and <![CDATA[ to_char(d.send_date,'yyyy-mm-dd') <=  #{conditiions.sendEndDate,jdbcType=VARCHAR} ]]>
			</if>
		</where>
		order by to_char(d.send_DATE,'yyyy-MM-dd HH24:mi:ss') desc
	</select>

	<select id="getDelivery" resultMap="BaseResultExtMap">
		select d.*, fo.ORG_NAME "fOrgName",i.invoice_no "invoiceNo",
		i.account_payed "accountPayed"
		from tb_delivery d
		left join td_org_info fo on d.f_org_id = fo.org_id
		left join TB_DELIVERY_INVOICE di on d.send_id = di.send_id
		left join tb_invoice i on di.invoice_id = i.invoice_id
		where d.send_id = #{sendId,jdbcType=VARCHAR} or d.send_no = #{sendId,jdbcType=VARCHAR}
	</select>

	<update id="batchUpdateDeliveryFstate">
		update tb_delivery d
		set d.fstate = #{checkFstate}
		<if test="rejectReason != null and rejectReason != ''">
			,d.REJECT_REASON = #{rejectReason}
		</if>	
		where d.send_id in
		<foreach collection="sendIds" item="sendId" open="("
			separator="," close=")">
			#{sendId,jdbcType=VARCHAR}
		</foreach>
	</update>

	<update id="batchUpdateOrderFstate">
		update tb_order o
		set o.fstate = #{fstate}
		where o.order_id in
		<foreach collection="orderIds" item="orderId" open="("
			separator="," close=")">
			#{orderId,jdbcType=VARCHAR}
		</foreach>
	</update>

	<select id="searchOrderIdsBySendIds" resultType="String">
		select distinct d.order_id
		from tb_delivery d
		where d.send_id in
		<foreach collection="sendIds" item="sendId" open="("
			separator="," close=")">
			#{sendId,jdbcType=VARCHAR}
		</foreach>
	</select>
	<!-- 判断指定订单的产品是否已经全部验收通过 -->
	<select id="isOrderFullThrough" parameterType="string"
		resultType="boolean">
		SELECT CASE WHEN
		(
		SELECT sum(AMOUNT) total_AMOUNT
		FROM TB_ORDER od
		LEFT JOIN TB_ORDER_DETAIL odd on od.ORDER_ID=odd.ORDER_ID
		WHERE od.ORDER_ID = #{orderId, jdbcType=VARCHAR}
		) =
		(
		SELECT sum(AMOUNT) sented_total_AMOUNT
		from TB_DELIVERY dl
		LEFT JOIN TB_DELIVERY_DETAIL dd on dd.SEND_ID=dl.SEND_ID
		WHERE dl.ORDER_ID=#{orderId, jdbcType=VARCHAR}
		AND dl.FSTATE ='60'
		)
		THEN 1 ELSE 0 END as tf
		from dual
	</select>

	<!--  生成送货单：更新送货单相关的数据保存标识 -->
	<update id="updateSaveFlagBySendId" parameterType="string">
		BEGIN
		  <!-- 送货单产品: 更新数据保存标识 -->
		  DELETE FROM TB_DELIVERY_DETAIL WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='03';
		  UPDATE TB_DELIVERY_DETAIL SET save_flag='01', AMOUNT=DRAFT_AMOUNT, FLOT=DRAFT_FLOT, PROD_DATE=DRAFT_PROD_DATE, USEFUL_DATE=DRAFT_USEFUL_DATE WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='02';
		  UPDATE TB_DELIVERY_DETAIL SET save_flag='01', DRAFT_AMOUNT=null, DRAFT_FLOT=null, DRAFT_PROD_DATE=null, DRAFT_USEFUL_DATE=null WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='00';
		  <!-- 刷新产品明细序号 -->
		  UPDATE TB_DELIVERY_DETAIL set FSORT=ROWNUM WHERE SEND_ID=#{sendId, jdbcType=VARCHAR};
		  <!-- 送货单手术包: 更新数据保存标识 -->
		  DELETE FROM TB_DELIVERY_PACKAGE WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='03';
		  UPDATE TB_DELIVERY_PACKAGE SET save_flag='01', AMOUNT=DRAFT_AMOUNT WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='02';
		  UPDATE TB_DELIVERY_PACKAGE SET save_flag='01', DRAFT_AMOUNT=null WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='00';
		  <!-- 送货单包工具: 更新数据保存标识 -->
		  DELETE FROM TB_DELIVERY_PACKAGE_TOOL WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='03';
		  UPDATE TB_DELIVERY_PACKAGE_TOOL SET save_flag='01', AMOUNT=DRAFT_AMOUNT WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='02';
		  UPDATE TB_DELIVERY_PACKAGE_TOOL SET save_flag='01', DRAFT_AMOUNT=null WHERE send_id=#{sendId,jdbcType=VARCHAR} and save_flag='00';
		END;
	</update>

	<!-- 获取指定送货单手术包的连续的序号 -->
	<select id="findNewPackageIdMapping" resultType="hashMap" parameterType="string">
		SELECT PACKAGE_ID, rownum NEW_PACKAGE_ID FROM(SELECT DISTINCT PACKAGE_ID from TB_DELIVERY_PACKAGE WHERE SEND_ID=#{sendId,jdbcType=VARCHAR})
	</select>

	<!-- 更新指定送货单手术包的连续的序号 -->
	<select id="updatePackageId">
		BEGIN
			<!-- 刷新手术包序号（TB_DELIVERY_PACKAGE） -->
			UPDATE TB_DELIVERY_PACKAGE tdp set PACKAGE_ID=nvl((select NEW_PACKAGE_ID from (
				<foreach collection="pp" item="p" separator="union all">
					SELECT #{p.PACKAGE_ID} PACKAGE_ID, #{p.NEW_PACKAGE_ID} NEW_PACKAGE_ID from dual
				</foreach>
			) np where np.PACKAGE_ID=tdp.PACKAGE_ID), PACKAGE_ID)
			WHERE SEND_ID=#{sendId,jdbcType=VARCHAR};
			<!-- 刷新手术包序号（TB_DELIVERY_PACKAGE_TOOL） -->
			UPDATE TB_DELIVERY_PACKAGE_TOOL dpt set PACKAGE_ID=nvl((select NEW_PACKAGE_ID from (
				<foreach collection="pp" item="p" separator="union all">
					SELECT #{p.PACKAGE_ID} PACKAGE_ID, #{p.NEW_PACKAGE_ID} NEW_PACKAGE_ID from dual
				</foreach>
			) np where np.PACKAGE_ID=dpt.PACKAGE_ID), PACKAGE_ID)
			WHERE SEND_ID=#{sendId,jdbcType=VARCHAR};
		END;
	</select>
	
</mapper>