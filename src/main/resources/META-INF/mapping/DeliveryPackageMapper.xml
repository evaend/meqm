<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phxl.ysy.dao.DeliveryPackageMapper">

	<resultMap id="BaseResultMap" type="com.phxl.ysy.entity.DeliveryPackage">
		<id column="PACKAGE_ATTR_GUID" property="packageAttrGuid" jdbcType="VARCHAR" />
		<result column="SEND_ID" property="sendId" jdbcType="VARCHAR" />
		<result column="PACKAGE_ID" property="packageId" jdbcType="DECIMAL" />
		<result column="ATTRIBUTE_ID" property="attributeId" jdbcType="VARCHAR" />
		<result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
		<result column="IS_IMPLANT_FLAG" property="isImplantFlag" jdbcType="VARCHAR" />
		<result column="IS_TOOL_FLAG" property="isToolFlag" jdbcType="VARCHAR" />
		<result column="SAVE_FLAG" property="saveFlag" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List_With_Prefix">
		tdp.PACKAGE_ATTR_GUID, tdp.SEND_ID, tdp.PACKAGE_ID, tdp.ATTRIBUTE_ID, tdp.AMOUNT, tdp.IS_IMPLANT_FLAG, tdp.IS_TOOL_FLAG, tdp.SAVE_FLAG
	</sql>
	
	<!-- 查找某个送货单的手术包的编号列表 -->
	<select id="findPackageIdsBySendId" resultType="string">
		SELECT DISTINCT dp.PACKAGE_ID from TB_DELIVERY_PACKAGE dp WHERE <include refid="sendIdAndSubmitFlagScope" />
	</select>
	
	<!-- 查询指定送货单的手术包统计信息 -->
	<select id="subtotalPackageBySendId" resultType="hashMap">
		select
			<!-- packageAmount		手术包总数量 -->
			(select count(distinct package_id) from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope" />) as "packageAmount",
			<!-- materailAmount		产品总数量 -->
			(select <include refid="SUM_AMOUNT"/> from tb_delivery_detail where <include refid="sendIdAndSubmitFlagScope"/>) as "materailAmount",
			<!-- outerImpAmount		外来植入物总数量 -->
			(select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID not in ('12','operTool')) as "outerImpAmount",
			<!-- sterilizeAmount	灭菌总数量 -->
			(select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = '12') as "sterilizeAmount",
			<!-- toolAmount			外来工具总数量 -->
			(select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = 'operTool') as "toolAmount"
		from dual
	</select>
	
	<!-- 查询指定单据的手术包列表（横表型式） -->
	<select id="findPackageListBySendId" resultType="java.util.LinkedHashMap">
		select
			null "packageId",
			'包含植入物' as "hasImplantFlag",
			<foreach collection="gkAttributes" item="attr" index="index" separator=",">
				#{attr.TF_CLO_NAME}
				<if test="headerStyle!=null and headerStyle==1">
					||'('||(
						SELECT <include refid="SUM_AMOUNT"/>
						from TB_DELIVERY_DETAIL tdd
						LEFT JOIN TD_TENDER_DETAIL ttd on TDD.TENDER_DETAIL_GUID=TTD.TENDER_DETAIL_GUID
						LEFT JOIN TD_TENDER_INFO tti on ttd.tender_guid=tti.tender_guid
						WHERE <include refid="sendIdAndSubmitFlagScope" /> and tti.ATTRIBUTE_ID=#{attr.TF_CLO_CODE,jdbcType=VARCHAR}
					)||')'
				</if>
				as "${attr.TF_CLO_CODE}"
			</foreach>,
			'手术器械'
			<if test="headerStyle!=null and headerStyle==1">
				||'('||(
					select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = 'operTool'
				)||')'
			</if>
			as "operTool",
			'查看工具操作' as "sumOperTool"
		from dual
		<if test="packageIds!=null and packageIds.size>0">union all</if>
		<include refid="findPackageListBySendId_SQL" />
		union all
		select
			'-1' "packageId",
			case when (select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID!='12')>0 THEN '是' else '否' end as "hasImplantFlag",
			<foreach collection="gkAttributes" item="attr" index="index" separator=",">
				(SELECT <include refid="SUM_AMOUNT"/> from TB_DELIVERY_PACKAGE dp WHERE <include refid="sendIdAndSubmitFlagScope" /> and dp.ATTRIBUTE_ID=#{attr.TF_CLO_CODE,jdbcType=VARCHAR})||'' as "${attr.TF_CLO_CODE}"
			</foreach>,
			nvl((SELECT <include refid="SUM_AMOUNT"/> from tb_delivery_package dpt WHERE <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = 'operTool') ,0)||'' as "operTool",
			(SELECT <include refid="SUM_AMOUNT"/> from tb_delivery_package_tool WHERE <include refid="sendIdAndSubmitFlagScope"/>)||'' as "sumOperTool"
		from dual
	</select>

	<!-- SQL语句: 查询指定单据的手术包列表（横表型式） -->
	<sql id="findPackageListBySendId_SQL">
		<foreach collection="packageIds" item="packageId" separator="union all">
			select
				#{packageId,jdbcType=VARCHAR} "packageId",
				case when (select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and PACKAGE_ID=#{packageId,jdbcType=VARCHAR} and ATTRIBUTE_ID!='12')>0 THEN '是' else '否' end as "hasImplantFlag",
				<foreach collection="gkAttributes" item="attr" index="index" separator=",">
					(SELECT <include refid="SUM_AMOUNT"/> from TB_DELIVERY_PACKAGE dp WHERE <include refid="sendIdAndSubmitFlagScope" /> and dp.PACKAGE_ID=#{packageId,jdbcType=VARCHAR} and dp.ATTRIBUTE_ID=#{attr.TF_CLO_CODE,jdbcType=VARCHAR})||'' as "${attr.TF_CLO_CODE}"
				</foreach>,
				(SELECT <include refid="SUM_AMOUNT"/> from tb_delivery_package dpt WHERE <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = 'operTool' and dpt.PACKAGE_ID=#{packageId,jdbcType=VARCHAR})||'' as "operTool",
				(SELECT <include refid="SUM_AMOUNT"/> from tb_delivery_package_tool WHERE <include refid="sendIdAndSubmitFlagScope"/> and PACKAGE_ID=#{packageId,jdbcType=VARCHAR})||'' as "sumOperTool"
			from dual
		</foreach>
	</sql>
	
	<!-- 定位单号 -->
	<sql id="sendIdAndSubmitFlagScope">
		SEND_ID = #{sendId,jdbcType=VARCHAR}
		<!--定位数据状态：S/D-->
		<choose>
			<!-- 已提交备货数据 -->
			<when test='submitFlag!=null and submitFlag=="S"'> and SAVE_FLAG in ('01','02','03') </when>
			<!--临时备货数据-->
			<when test='submitFlag!=null and submitFlag=="D"' > and SAVE_FLAG in ('00', '01','02') </when>
			<otherwise>and 1=2</otherwise>
		</choose>
	</sql>

	<sql id="SUM_AMOUNT">
		<if test='submitFlag!=null and submitFlag=="S"' >nvl(sum(AMOUNT),0)</if>
		<if test='submitFlag!=null and submitFlag=="D"' >nvl(sum(nvl(DRAFT_AMOUNT,AMOUNT)),0)</if>
	</sql>

	<!-- 查询手术包列表的表头一行 -->
	<select id="findHeaderForPackageListBySendId" resultType="java.util.LinkedHashMap">
			<foreach collection="gkAttributes" item="attr" index="index" separator="union all">
				select
					#{attr.TF_CLO_CODE} as TF_CLO_CODE,
					#{attr.TF_CLO_NAME}||'('||(
							SELECT <include refid="SUM_AMOUNT"/>
							from TB_DELIVERY_DETAIL tdd
							LEFT JOIN TD_TENDER_DETAIL ttd on TDD.TENDER_DETAIL_GUID=TTD.TENDER_DETAIL_GUID
							LEFT JOIN TD_TENDER_INFO tti on ttd.tender_guid=tti.tender_guid
							WHERE <include refid="sendIdAndSubmitFlagScope" /> and tti.ATTRIBUTE_ID=#{attr.TF_CLO_CODE,jdbcType=VARCHAR}
					)||')' as TF_CLO_NAME
				from dual
			</foreach>
		  UNION ALL
			SELECT
				'operTool' as TF_CLO_CODE,
				'手术器械'||'('||(
						select <include refid="SUM_AMOUNT"/> from tb_delivery_package where <include refid="sendIdAndSubmitFlagScope"/> and ATTRIBUTE_ID = 'operTool'
				)||')' as TF_CLO_NAME
			from dual
	</select>

	<!-- 批量添加手术包 -->
	<insert id="insertPackageListBatch">
		INSERT INTO TB_DELIVERY_PACKAGE(PACKAGE_ATTR_GUID, SEND_ID, PACKAGE_ID, ATTRIBUTE_ID, AMOUNT, IS_IMPLANT_FLAG, IS_TOOL_FLAG)
		
		<foreach collection="packageList" item="item" separator="union all">
	    	SELECT 
		      sys_guid() PACKAGE_ATTR_GUID, 
		      #{sendId, jdbcType=VARCHAR} SEND_ID, 
		      #{item.packageId, jdbcType=DECIMAL} PACKAGE_ID,
		      #{item.attributeId, jdbcType=VARCHAR} ATTRIBUTE_ID,
		      #{item.tfAmount, jdbcType=DECIMAL} AMOUNT,
		      #{item.isImplantFlag, jdbcType=VARCHAR} IS_IMPLANT_FLAG,
		      #{item.isToolFlag, jdbcType=VARCHAR} IS_TOOL_FLAG
	    	from dual
	    </foreach>
	</insert>

	<!-- 批量添加手术包 -->
	<insert id="mergePackageList4Oper">
		BEGIN
			<!-- 添加或更新手术包产品类型 -->
			<if test="packageList!=null and packageList.size()>0">
				MERGE INTO TB_DELIVERY_PACKAGE h
				USING (
					<foreach collection="packageList" item="item" separator="union all">
						SELECT
							sys_guid() PACKAGE_ATTR_GUID,
							#{sendId, jdbcType=VARCHAR} SEND_ID,
							#{item.packageId, jdbcType=DECIMAL} PACKAGE_ID,
							#{item.attributeId, jdbcType=VARCHAR} ATTRIBUTE_ID,
							#{item.tfAmount, jdbcType=DECIMAL} AMOUNT,
							#{item.isImplantFlag, jdbcType=VARCHAR} IS_IMPLANT_FLAG,
							#{item.isToolFlag, jdbcType=VARCHAR} IS_TOOL_FLAG
						from dual
					</foreach>
				) hp ON (h.SEND_ID=hp.SEND_ID and h.PACKAGE_ID=hp.PACKAGE_ID and h.ATTRIBUTE_ID=hp.ATTRIBUTE_ID)
				WHEN MATCHED THEN UPDATE
				SET
					h.PACKAGE_ATTR_GUID = hp.PACKAGE_ATTR_GUID,
					h.DRAFT_AMOUNT = hp.AMOUNT,
					h.AMOUNT = DECODE(h.SAVE_FLAG, '00', hp.AMOUNT, h.AMOUNT),
					h.SAVE_FLAG = DECODE(h.SAVE_FLAG, '01', '02', '02', '02', '03', '03', '00')
				WHEN NOT MATCHED THEN INSERT(PACKAGE_ATTR_GUID, SEND_ID, PACKAGE_ID, ATTRIBUTE_ID, AMOUNT, IS_IMPLANT_FLAG, IS_TOOL_FLAG, SAVE_FLAG)
				VALUES (hp.PACKAGE_ATTR_GUID, hp.SEND_ID, hp.PACKAGE_ID, hp.ATTRIBUTE_ID, hp.AMOUNT, hp.IS_IMPLANT_FLAG, hp.IS_TOOL_FLAG, '00');
			</if>

			<!-- 删除标识: 前端已经删除的手术包产品类型 -->
			UPDATE TB_DELIVERY_PACKAGE tdp
			SET
				tdp.DRAFT_AMOUNT = NULL,
				tdp.SAVE_FLAG='03'
			WHERE tdp.SEND_ID = #{sendId, jdbcType=VARCHAR} and tdp.SAVE_FLAG in ('01','02')
			<if test="packageList!=null and packageList.size()>0">
				AND NOT EXISTS (
					SELECT 1 FROM(
					<foreach collection="packageList" item="item" separator="union all">
						SELECT
							#{item.packageId, jdbcType=DECIMAL} PACKAGE_ID,
							#{item.attributeId, jdbcType=VARCHAR} ATTRIBUTE_ID
						from dual
					</foreach>) hp
					WHERE hp.PACKAGE_ID=tdp.PACKAGE_ID and hp.ATTRIBUTE_ID=tdp.ATTRIBUTE_ID
				)
			</if>;

			<!-- 物理删除: 前端已经删除的手术包产品类型 -->
			DELETE FROM TB_DELIVERY_PACKAGE tdp
			WHERE tdp.SEND_ID = #{sendId, jdbcType=VARCHAR} and tdp.SAVE_FLAG='00'
			<if test="packageList!=null and packageList.size()>0">
				AND NOT EXISTS (
					SELECT 1 FROM(
					<foreach collection="packageList" item="item" separator="union all">
						SELECT
							#{item.packageId, jdbcType=DECIMAL} PACKAGE_ID,
							#{item.attributeId, jdbcType=VARCHAR} ATTRIBUTE_ID
						from dual
					</foreach>) hp
					WHERE hp.PACKAGE_ID=tdp.PACKAGE_ID and hp.ATTRIBUTE_ID=tdp.ATTRIBUTE_ID
				)
			</if>;

			<!-- 物理删除: 前端已经删除的手术包,同时删除手术包工具 -->
			DELETE FROM TB_DELIVERY_PACKAGE_TOOL
			WHERE SEND_ID = #{sendId, jdbcType=VARCHAR} and SAVE_FLAG='00'
			<if test="packageList!=null and packageList.size()>0">
				AND PACKAGE_ID not in (<foreach collection="packageList" item="item" separator="union">SELECT #{item.packageId, jdbcType=DECIMAL} FROM dual</foreach>)
			</if>;
		END;
	</insert>

	<!-- 查看指定送货单是否有手术包 -->
	<select id="countPackageListBySendId" parameterType="string" resultType="Boolean">
		SELECT case when count(*)=0 THEN 0 ELSE 1 end flag from TB_DELIVERY_PACKAGE WHERE SEND_ID=#{sendId, jdbcType=VARCHAR} AND SAVE_FLAG in ('00','01','02')
	</select>

	<!-- 手术包产品类型数量比较 -->
	<select id="checkAttributeAmountOfOperPackage" parameterType="string" resultType="hashMap">
		select nvl(tdd.ATTRIBUTE_ID, tdp.ATTRIBUTE_ID) attribute_id, tsd.TF_CLO_NAME attribute_name, nvl(tdd.sub_amount,0)-nvl(tdp.sub_amount,0) diff,
				tdd.sub_amount tdd_sub_amount, tdp.sub_amount tdp_sub_amount
		from
		(
			SELECT ti.ATTRIBUTE_ID, sum(nvl(DRAFT_AMOUNT,AMOUNT)) sub_amount
			from TB_DELIVERY_DETAIL dd
			left join TD_TENDER_DETAIL td on dd.TENDER_DETAIL_GUID=td.TENDER_DETAIL_GUID
			left join TD_TENDER_INFO ti on td.TENDER_GUID=ti.TENDER_GUID
			WHERE SEND_ID=#{sendId, jdbcType=VARCHAR} AND SAVE_FLAG in ('00','01','02') and ATTRIBUTE_ID is not null
			GROUP BY ti.ATTRIBUTE_ID
			ORDER BY ti.ATTRIBUTE_ID
		) tdd
		full join (
			SELECT dp.ATTRIBUTE_ID, sum(nvl(DRAFT_AMOUNT,AMOUNT)) sub_amount
			from TB_DELIVERY_PACKAGE dp
			WHERE SEND_ID=#{sendId, jdbcType=VARCHAR} AND SAVE_FLAG in ('00','01','02') and ATTRIBUTE_ID !='operTool'
			GROUP BY dp.ATTRIBUTE_ID
		) tdp on tdd.ATTRIBUTE_ID=tdp.ATTRIBUTE_ID
		left JOIN  TD_STATIC_INFO tsi on tsi.ORG_ID=108 and tsi.TF_CLO='GKATTRIBUTE'
		left JOIN TD_STATIC_DATA tsd on tsi.STATIC_ID=tsd.STATIC_ID and tsd.TF_CLO_CODE=nvl(tdd.ATTRIBUTE_ID,tdp.ATTRIBUTE_ID)
		ORDER BY tdp.ATTRIBUTE_ID
	</select>

	<!-- 手术包手术器械数量比较 -->
	<select id="checkToolAmountOfOperPackage" parameterType="string" resultType="hashMap">
		select
			nvl(tdp.PACKAGE_ID, tdpt.PACKAGE_ID) PACKAGE_ID,
			case when nvl(tdpt.sub_amount,0)>0 then nvl(tdp.sub_amount,0)-nvl(tdpt.sub_amount,0) else 0 end diff,
			nvl(tdp.sub_amount,0) tdp_sub_amount,
			tdpt.sub_amount dpt_sub_amount
		from
		(
			SELECT dp.PACKAGE_ID, sum(nvl(DRAFT_AMOUNT,AMOUNT)) sub_amount
			from TB_DELIVERY_PACKAGE dp
			WHERE SEND_ID=#{sendId, jdbcType=VARCHAR} AND SAVE_FLAG in ('00','01','02') and ATTRIBUTE_ID ='operTool'
			GROUP BY dp.PACKAGE_ID
		) tdp
		full join (
			SELECT dpt.PACKAGE_ID, sum(nvl(DRAFT_AMOUNT,AMOUNT)) sub_amount
			from TB_DELIVERY_PACKAGE_TOOL dpt
			WHERE SEND_ID=#{sendId, jdbcType=VARCHAR} AND SAVE_FLAG IN ( '00', '01', '02' )
			GROUP BY dpt.PACKAGE_ID
		) tdpt on tdp.PACKAGE_ID=tdpt.PACKAGE_ID
		order by PACKAGE_ID asc
	</select>

</mapper>