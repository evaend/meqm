<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phxl.ysy.dao.StorageDeptMapper">

	<resultMap id="BaseResultMap" type="com.phxl.ysy.entity.StorageDept">
		<id column="STORAGE_GUID" property="storageGuid" jdbcType="VARCHAR" />
		<id column="DEPT_GUID" property="deptGuid" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
		<result column="ORG_ID" property="orgId" jdbcType="DECIMAL" />
		<result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="BaseExtResultMap" type="java.util.Map" extends="BaseResultMap">
		<id column="isSelected" property="isSelected" jdbcType="DECIMAL" />
	</resultMap>
	
	<sql id="Base_Column_List">
		STORAGE_GUID, DEPT_GUID, DEPT_NAME, ORG_ID, ORG_NAME
	</sql>
	
	<sql id="Base_Column_List_With_Prefix">
		sd.STORAGE_GUID, sd.DEPT_GUID, sd.DEPT_NAME, sd.ORG_ID, sd.ORG_NAME
	</sql>
	
	<!-- 查询库房开放科室列表 -->
	<select id="queryOpenDeptsByStorageGuid" resultMap="BaseExtResultMap" parameterType="string">
		SELECT 
			#{storageGuid, jdbcType=VARCHAR} STORAGE_GUID, 
			d.DEPT_GUID, d.DEPT_NAME, d.ORG_ID, d.ORG_NAME,
		  	CASE WHEN sd.DEPT_GUID IS NOT NULL THEN 1 ELSE 0 END as IS_SELECTED
		FROM (
		   SELECT * FROM TD_STORAGE_OPEN_DEPT WHERE STORAGE_GUID = #{storageGuid, jdbcType=VARCHAR}
		) sd
		right join (
			SELECT dd.*, o.ORG_NAME  
			from TD_ORG_DEPT dd 
			LEFT JOIN TD_ORG_INFO o on dd.ORG_ID=o.ORG_ID
			WHERE dd.ORG_ID = ( SELECT ORG_ID FROM TD_STORAGE_INFO WHERE STORAGE_GUID = #{storageGuid, jdbcType=VARCHAR} )
		) d on d.ORG_ID=sd.ORG_ID and sd.DEPT_GUID = d.DEPT_GUID 
	</select>

	<!-- 判断某科室是否是指定库房的关联科室 -->
	<select id="whetherDeptOfSpecStorage" resultType="java.lang.Boolean">
		SELECT
			case when count(*)=0 THEN 0 ELSE 1 end flag
		FROM  TD_STORAGE_OPEN_DEPT sd
		left join TD_STORAGE_INFO sg on sg.STORAGE_GUID=sd.STORAGE_GUID
		WHERE sg.FSTATE='01' and sg.STORAGE_GUID=#{storageGuid,jdbcType=VARCHAR} and sd.DEPT_GUID = #{deptGuid,jdbcType=VARCHAR}
	</select>

	<!-- 查询科室列表（联想下拉搜索） -->
	<select id="searchOpenDeptsByStorageId" resultType="hashMap" parameterType="com.phxl.core.base.entity.Pager">
		SELECT
			DISTINCT d.DEPT_GUID "value", d.DEPT_NAME "text"
		FROM  TD_STORAGE_OPEN_DEPT d
		WHERE
			<!-- 指定机构体系 -->
			d.STORAGE_GUID = #{conditiions.storageId, jdbcType=VARCHAR}
			<if test="conditiions.searchName!=null and conditiions.searchName!=''">
				and regexp_like(d.DEPT_NAME, #{conditiions.searchName, jdbcType=VARCHAR})
			</if>
	</select>
	
	<!-- 根据库房guid删除库房开放科室 -->
	<delete id="deleteDeptsByStorageGuid" parameterType="string">
		delete TD_STORAGE_OPEN_DEPT where STORAGE_GUID = #{storageGuid, jdbcType=VARCHAR}
	</delete>
	
	<!-- 根据科室guid删除库房开放的科室 -->
	<delete id="deleteStoragesByDeptGuid" parameterType="string">
		delete TD_STORAGE_OPEN_DEPT where DEPT_GUID = #{deptGuid, jdbcType=VARCHAR}
	</delete>
	
	<!-- 批量添加: 库房开放科室 -->
	<insert id="insertDeptsByStorageGuid">
		insert into TD_STORAGE_OPEN_DEPT(STORAGE_GUID, DEPT_GUID, DEPT_NAME, ORG_ID, ORG_NAME)
		
		SELECT distinct sd.STORAGE_GUID, sd.DEPT_GUID, d.DEPT_NAME, d.ORG_ID, o.ORG_NAME 
		from <foreach collection="deptGuids" index="index" open="(" separator=" union " close=")">
			select 
				#{storageGuid, jdbcType=VARCHAR} STORAGE_GUID, 
				#{deptGuids[${index}], jdbcType=VARCHAR} DEPT_GUID
			from dual 
		</foreach> sd
		LEFT JOIN TD_ORG_DEPT d on sd.DEPT_GUID=d.DEPT_GUID
		LEFT JOIN TD_ORG_INFO o on d.ORG_ID=o.ORG_ID
	</insert>
	
</mapper>